version: '3.9'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cicd
    volumes:
      - ./CI-CD Health Dashboard/db/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./CI-CD Health Dashboard/backend
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cicd
      - NODE_ENV=production
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - ALERT_FROM=CI/CD Dashboard <noreply@example.com>
      - ALERT_TO=rahulmudpalliwar@gmail.com
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_BASE_URL=http://localhost:3000
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "5173:5173"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 10

  verifier:
    image: alpine:3.20
    depends_on:
      backend:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      frontend:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-lc"]
    command: >-
      "apk add --no-cache curl jq >/dev/null && 
      echo '==> Verifying endpoints' && 
      curl -sf http://backend:3000/api/health && 
      curl -sf http://frontend:5173 >/dev/null && 
      echo '==> Simulating failed GitHub run' && 
      curl -sS -X POST http://backend:3000/api/webhook/github -H 'Content-Type: application/json' \
        -d '{"workflow_run":{"id":987654321,"status":"completed","conclusion":"failure","run_started_at":"2025-10-15T10:00:00Z","updated_at":"2025-10-15T10:02:30Z","html_url":"https://github.com/org/repo/actions/runs/987654321"},"repository":{"full_name":"org/repo"}}' && 
      echo && 
      echo '==> Checking metrics' && 
      curl -sf http://backend:3000/api/metrics | jq -e '.failureRate == 1 and .avgBuildTimeSeconds == 150' && 
      echo '==> Checking builds list' && 
      curl -sf 'http://backend:3000/api/builds?limit=1' | jq -e '.[0].conclusion == "failure"' && 
      echo '==> Checking Mailhog for alert' && 
      curl -sf http://mailhog:8025/api/v2/messages | jq -e '.items | length >= 1' && 
      echo 'All checks passed'"
    restart: "no"

profiles:
  - e2e


